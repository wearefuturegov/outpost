# This code from https://dev.to/vvo/a-rails-and-postgresql-setup-for-github-actions-ci-nc8
# and https://dev.to/jennapederson/github-actions-in-action-2c5

name: Run tests

env:
  RAILS_ENV: test
  NODE_ENV: development

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13.7-alpine
        env:
          POSTGRES_USER: outpost
          POSTGRES_PASSWORD: password
          POSTGRES_DB: outpost_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      mongo:
        image: mongo:6
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: password
        ports:
          - 27017:27017

    steps:
      - name: Checkout repository
        uses: actions/checkout@main

      - name: Install native postgres client
        run: |
          sudo apt-get -y install libpq-dev

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Install required Node.js version
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - name: Get Yarn cache directory path
        id: yarn-cache
        run: echo "name=dir::$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Setup cache key and directory for node_modules cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Yarn install
        env:
          NODE_OPTIONS: --openssl-legacy-provider
        run: yarn --frozen-lockfile

      - name: Setup database
        env:
          RAILS_ENV: test
          DATABASE_URL: postgresql://outpost:password@localhost:5432/outpost_test
          DB_URI: mongodb://root:password@localhost:27017/outpost_development?authSource=admin
        run: |
          bundle exec rails db:drop
          bundle exec rails db:create
          bundle exec rails db:migrate

      - name: Compile assets
        env:
          RAILS_ENV: test
          NODE_OPTIONS: --openssl-legacy-provider
        run: |
          bundle exec rails assets:precompile

      - name: Run tests
        env:
          RAILS_ENV: test
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          OFSTED_FEED_API_ENDPOINT: https://test-ofsted-feed.stub # this is not a real url, we just need an env variable set for the stub to work in tests
          DATABASE_URL: postgresql://outpost:password@localhost:5432/outpost_test
        run: |
          bundle exec rspec

      - name: Upload report to Codecov
        uses: codecov/codecov-action@v3
