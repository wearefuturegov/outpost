version: "3.7"
services:
  # Outpost app

  outpost:
    image: "outpost:development"
    container_name: outpost
    # use if you just want to keep the container running
    # command: ["tail", "-f", "/dev/null"]
    # uncomment for 'prod' like env locally
    # command: ["bin/bundle", "exec", "puma", "-C", "config/puma.rb"]
    init: true
    depends_on:
      - postgres
      - mongo
    platform: linux/amd64
    build:
      context: .
      # uncomment for 'prod' like env locally
      # NODE_ENV: production
      # RAILS_ENV: production
      # RACK_ENV: production
      # APP_ENV: production
    ports:
      - 3000:3000
    volumes:
      - ./:/usr/src/app:cached
      - /usr/src/app/node_modules
    environment:
      # uncomment for 'prod' like env locally
      # NODE_ENV: production
      # RAILS_ENV: production
      # RACK_ENV: production
      # APP_ENV: production
      SHOW_ENV_BANNER: ${SHOW_ENV_BANNER:-outpost development}
      DB_URI: ${DB_URI:-mongodb://mongo:27017/outpost_api_development}
      DATABASE_URL: ${DATABASE_URL:-postgresql://outpost:password@postgres:5432/outpost?}
    networks:
      - external_network
      - internal_network

  outpost-api-service:
    extends:
      file: ./.docker/services/outpost-api-service/outpost-api-service.yml
      service: outpost-api-service
    depends_on:
      - mongo

  # Databases

  postgres:
    extends:
      file: ./.docker/services/postgres/postgres.yml
      service: postgres
    networks:
      - external_network

  mongo:
    extends:
      file: ./.docker/services/mongo/mongo.yml
      service: mongo
    networks:
      - external_network

volumes:
  mongo-volume:
  postgres-volume:

networks:
  external_network:
  internal_network:
    internal: true
